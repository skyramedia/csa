---
import Layout from "~/layouts/PageLayout.astro";
import HeroText from "~/components/widgets/HeroText.astro";
import ContactUs from "~/components/widgets/Contact.astro";
import Features2 from "~/components/widgets/Features2.astro";
import { Resend } from "resend";

export const prerender = false;

let data: FormData = new FormData();
const missing: string[] = [];
if (Astro.request.method === "POST") {
  data = await Astro.request.formData();
  console.log(data);
  const token = data.get("g-recaptcha-response");
  if (!token) missing.push("captcha");
  else {
    console.log(token);
    const requestBody = new URLSearchParams({
      secret: import.meta.env.SECRET_KEY,
      response: token.toString(),
    });
    const res = await fetch("https://www.google.com/recaptcha/api/siteverify", {
      method: "POST",
      body: requestBody.toString(),
      headers: {
        "Content-Type": "application/x-www-form-urlencoded",
      },
    });
    const resp = await res.json();
    console.log(resp);
    if (!resp.success) missing.push("captcha");
  }
}

if (data.has("info")) {
  if (!data.get("name")) missing.push("name");
  if (!data.get("email")) missing.push("email");
  if (missing.length === 0) {
    // submit to spreadsheet
    const name = data.get("name");
    const email = data.get("email");
    const info = data.get("info");
    const resend = new Resend(import.meta.env.RESEND_API_KEY);
    const res = await resend.emails.send({
      from: "no-reply@skyramedia.com",
      to: "marketing@criticalsa.com",
      subject: `Add subscriber ${name}`,
      text: `Name: ${name}\nEmail: ${email}\nInfo: ${info}`,
    });
  }
} else if (data.has("phone")) {
  if (!data.get("name")) missing.push("name");
  if (!data.get("email")) missing.push("email");
  // if (!data.get('phone')) missing.push('Phone')
  if (!data.get("company")) missing.push("company");
  if (missing.length === 0) {
    const name = data.get("name");
    const email = data.get("email");
    const phone = data.get("phone");
    const company = data.get("company");
    const message = data.get("message");
    const resend = new Resend(import.meta.env.RESEND_API_KEY);
    const res = await resend.emails.send({
      from: "no-reply@skyramedia.com",
      to: "marketing@criticalsa.com",
      subject: `${name} from ${company}`,
      text: `From: ${name} (${email})\nCompany: ${company}\nPhone: ${phone}\n\nMessage:\n${message}`,
    });
    // submit to spreadsheet
  }
}

const form = data.has("phone") ? "contact" : "subscribe";

const metadata = {
  title: "Contact",
};
---

<Layout metadata={metadata}>
  <!-- HeroText Widget ******************* -->

  <HeroText tagline="Contact" title="Let's Connect!" />

  {
    missing.length !== 0 && (
      <p class="text-center text-red-500">*Fill in the required fields</p>
    )
  }

  {
    Astro.request.method === "POST" && missing.length === 0 && (
      <p class="text-center">
        <span class="rounded-full bg-green-500 px-8 py-4 text-xl text-white">
          Thank you!
        </span>
      </p>
    )
  }

  <ContactUs
    id="form1"
    title="Contact CSA"
    subtitle="We love talking safety! Send us your questions and we will get back to you as soon as possible."
    inputs={[
      {
        type: "text",
        name: "name",
        label: "Name *",
        value: form === "contact" && data.get("name"),
      },
      {
        type: "text",
        name: "company",
        label: "Company *",
        value: form === "contact" && data.get("company"),
      },
      {
        type: "email",
        name: "email",
        label: "Email *",
        value: form === "contact" && data.get("email"),
      },
      {
        type: "tel",
        name: "phone",
        label: "Phone",
      },
    ]}
    textarea={{
      label: "Message",
    }}
    description=""
    button="Contact Us"
  />

  <ContactUs
    id="form2"
    title="Sign up for our mailing list"
    subtitle="Stay up to date on CSA. Recieve updates on CSA's latest news, including events, classes, and promotions."
    inputs={[
      {
        type: "text",
        name: "name",
        label: "Name *",
        value: form === "subscribe" && data.get("name"),
      },
      {
        type: "email",
        name: "email",
        label: "Email *",
        value: form === "subscribe" && data.get("email"),
      },
      {
        type: "text",
        name: "info",
        label: "How did you hear about us?",
      },
    ]}
    description=""
    button="Stay Connected"
  />

  <!-- Features2 Widget ************** -->

  <Features2
    title="We are here to help!"
    items={[
      {
        title: "Phone",
        description: "+1 (941) 900-4047",
        icon: "tabler:headset",
      },
      {
        title: "Email",
        description: "sales@criticalsa.com",
        icon: "tabler:mail",
      },
      {
        title: "LinkedIn",
        icon: "tabler:brand-linkedin",
        description: "@critical-systems",
        callToAction: {
          href: "https://linkedin.com/company/critical-systems-analysis",
          text: '<svg width="1em" height="1em" viewBox="0 0 24 24" class="w-5 h-5 inline-block" data-icon="tabler:brand-linkedin" data-astro-source-file="/home/otterlord/Documents/Repos/freelancing/csa/node_modules/astro-icon/components/Icon.astro" data-astro-source-loc="117:44">  <symbol id="ai:tabler:brand-linkedin" data-astro-source-file="/home/otterlord/Documents/Repos/freelancing/csa/node_modules/astro-icon/components/Icon.astro" data-astro-source-loc="124:28"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M4 6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm4 5v5m0-8v.01M12 16v-5"></path><path d="M16 16v-3a2 2 0 0 0-4 0"></path></g></symbol><use xlink:href="#ai:tabler:brand-linkedin" data-astro-source-file="/home/otterlord/Documents/Repos/freelancing/csa/node_modules/astro-icon/components/Icon.astro" data-astro-source-loc="125:10"></use>  </svg> LinkedIn',
        },
      },
    ]}
  />
</Layout>
